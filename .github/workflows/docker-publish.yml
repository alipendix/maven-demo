name: Docker

on:
  schedule:
    - cron: '24 15 * * *'  # 🕒 Ejecutar todos los días a las 15:24 UTC
  push:
    branches: [ "main" ]  # 🚀 Cuando se hace push a la rama main
    tags: [ 'v*.*.*' ]    # 🔖 También se activa al crear un tag semántico (v1.2.3)
  pull_request:
    branches: [ "main" ]  # 🔄 También se ejecuta al hacer PR hacia main

env:
  REGISTRY: ghcr.io  # 🐳 Registro de imágenes (por defecto GitHub Container Registry)
  IMAGE_NAME: ${{ github.repository }}  # 📦 Nombre de la imagen (usuario/repositorio)

jobs:
  build:
    runs-on: ubuntu-latest  # 💻 Corre en una máquina Ubuntu

    permissions:
      contents: read          # 👓 Permiso para leer el contenido del repo
      packages: write         # ✍️ Permiso para subir imágenes al registry
      id-token: write         # 🆔 Necesario para firmar imágenes con cosign

    steps:
      - name: 🔍 Clonar el repositorio
        uses: actions/checkout@v4

      - name: 🔐 Instalar cosign (excepto en PRs)
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: 🛠️ Configurar Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: 🔐 Iniciar sesión en el registro Docker (excepto en PRs)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extraer metadatos de Docker
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: 🏗️ Construir y subir imagen Docker
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: ✍️ Firmar imagen publicada (excepto en PRs)
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
